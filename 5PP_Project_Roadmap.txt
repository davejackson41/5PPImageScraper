## Project Roadmap: 5PP Image Scraper

This roadmap outlines the **step-by-step tasks** required to build and refine the 5PP Image Scraper. The project will follow an **agile development** approach, iterating over time to improve AI performance and usability.

---

### **Stage 1 - Enable OCR through OpenAI & Test Results on 1 Image (Vaccination Card)**
âœ… Set up Python environment with required libraries (`openai`, `opencv`, `pytesseract`, `sqlite3`, etc.)  
âœ… Obtain OpenAI API key and set up authentication  
âœ… Load a **single sample vaccination card image**  
âœ… Pre-process image (grayscale conversion, thresholding, noise removal)  
âœ… Run OpenAI OCR to extract text  
âœ… Parse extracted text into structured format  
âœ… Manually compare extracted text with actual text on the card  
âœ… Log errors and evaluate OCR accuracy  
âœ… Adjust image pre-processing to improve OCR quality  
âœ… Save extracted data as a JSON file for further validation  

---

### **Stage 2 - Establish Vaccination Card Data Model & SQLite Integration**
âœ… Define **vaccination card data model** (fields: name, date, vaccine type, batch, etc.)  
âœ… Create SQLite database and table for **vaccination records**  
âœ… Develop function to map extracted text into corresponding database fields  
âœ… Implement error handling for incomplete/missing data  
âœ… Write extracted data to SQLite database  
âœ… Retrieve and verify stored data to ensure accuracy  
âœ… Create an export function (CSV/JSON) for extracted records  

---

### **Stage 3 - Establish GUI to View Image & Run AI**
âœ… Select lightweight GUI framework (`Tkinter`, `PyQt`, or `Streamlit`)  
âœ… Create interface to **upload & display images**  
âœ… Implement **"Run OCR"** button to process selected image  
âœ… Display extracted text on the GUI next to the image  
âœ… Add **"Save to Database"** button to store results  
âœ… Enable manual correction of extracted data within the UI  
âœ… Ensure UI can **handle multiple images** in a session  

---

### **Stage 4 - Enable AI for Child Particulars & Expand Database**
âœ… Obtain **sample Child Particulars form**  
âœ… Define **Child Particulars data model** (fields: name, DOB, guardian, etc.)  
âœ… Add **Child Particulars table** to SQLite database  
âœ… Update image-processing functions to differentiate between **Vaccination Cards** and **Child Particulars**  
âœ… Implement text extraction for Child Particulars  
âœ… Store extracted Child Particulars data in SQLite  
âœ… Validate and verify extracted data against original images  

---

### **Stage 5 - Enhance GUI for Multi-Form Selection**
âœ… Update UI to allow **selection between Vaccination Card & Child Particulars**  
âœ… Add drop-down or buttons to select form type  
âœ… Ensure the correct **OCR pipeline** is triggered based on form type  
âœ… Enable switching between processed images in UI  
âœ… Improve UI responsiveness & error handling  

---

### **Stage 6 - Enable AI Learning for Vaccination Cards**
âœ… Implement manual correction system in UI  
âœ… As user corrects text, **log corrections for AI learning**  
âœ… Store corrections as **feedback dataset**  
âœ… Adjust OCR processing dynamically based on user corrections  
âœ… Develop an adaptive learning module that **improves extraction over time**  
âœ… Enable **manual tagging** of missing fields for better AI predictions  

---

### **Stage 7 - Improve OCR Model Using Iterative Training**
âœ… Feed AI multiple **different versions** of Vaccination Cards  
âœ… Identify patterns and inconsistencies in extraction  
âœ… Optimize **image pre-processing** (cropping, thresholding, rotation, etc.)  
âœ… Use **regex and AI-based field validation** to auto-correct extracted text  
âœ… Train model to recognize **common errors & corrections**  
âœ… Introduce **automated validation rules** (e.g., valid date formats, expected vaccine names)  

---

### **Stage 8 - Enable AI Learning for Child Particulars**
âœ… Implement similar **learning workflow** as Vaccination Cards  
âœ… Validate extracted **Child Particulars** against training data  
âœ… Optimize field recognition (e.g., distinguishing between parent & child names)  
âœ… Implement auto-fixes for common OCR mistakes  
âœ… Adjust GUI to provide **real-time AI feedback** on extracted data  

---

### **Stage 9 - Improve OCR Accuracy & Expand AI Capabilities**
âœ… Run iterative **testing on large datasets**  
âœ… Expand OCR **training dataset** with additional real-world samples  
âœ… Implement AI-based **data confidence scoring** (highlight low-confidence fields for review)  
âœ… Develop a feature to suggest **alternative AI interpretations** when confidence is low  
âœ… Finalize **version 1.0** with **high extraction accuracy & streamlined UI**  
âœ… Gather user feedback and iterate on the solution  

---

## **Ongoing Enhancements & Future Considerations**
ðŸ”„ Enable AI to **auto-classify images** as Vaccination or Child Particulars  
ðŸ”„ Implement **batch image processing**  
ðŸ”„ Improve OCR pipeline with **deep learning-based handwriting recognition**  
ðŸ”„ Explore **local AI model deployment** to avoid API dependency  
ðŸ”„ Build **export & reporting features** for database insights  

---